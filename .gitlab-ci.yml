# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: php:latest

variables:
  MYSQL_DATABASE: fashion-world
  MYSQL_ROOT_USERNAME: root
  MYSQL_ROOT_PASSWORD: root

cache:
  paths:
    - vendor/
    - client/node_modules/

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mysql:latest

before_script:
  - apt-get update -yqq
  # Prep for Node
  - apt-get install gnupg -yqq
  # Upgrade to Node 8
  - curl -sL https://deb.nodesource.com/setup_8.x | bash -
  # Install dependencies
  - apt-get install git nodejs libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
  # Install php extensions
  #  - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache

  # Copy over testing configuration.
  # Don't forget to set the database config in .env correctly
  # DB_HOST=mysql
  # DB_DATABASE=project_name
  # DB_USERNAME=root
  # DB_PASSWORD=secret
  - cp .env.testing .env

test:
  stage: test
  script:
    - cd client
    - npm install
    - npm test

build:
  stage: build
  script:
    - cd client
    - npm install
    - npm run build

test_laravel:
  stage: test
  script:
    # Install & enable Xdebug for code coverage reports
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # Install Composer and project dependencies.
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install

    # Generate an application key. Re-cache.
    - php artisan key:generate
    - php artisan config:cache
    # Run database migrations.
    - php artisan migrate
    # Run database seed
    - php artisan db:seed

    # run laravel tests
    - php vendor/bin/phpunit --coverage-text --colors=never

